<?phpdeclare(strict_types=1);namespace App\AdminModule\Forms\Products;use DbTable;use Nette\Database;use Nette\Application\UI\Form;use Nette\Utils\Strings;use Nette\Utils\Image;use Nette\Security\User;/** * Formular a jeho spracovanie pre pridanie viacerich produktov polozky. * Posledna zmena 14.05.2020 *  * @author     Ing. Peter VOJTECH ml. <petak23@gmail.com> * @copyright  Copyright (c) 2012 - 2020 Ing. Peter VOJTECH ml. * @license * @link       http://petak23.echo-msz.eu * @version    1.0.2 */class AddMultiProductsFormFactory {    /** @var DbTable\Products */	private $products;  /** @var string */  private $products_dir;  /** @var array */  private $products_settings;  /** @var int */  private $id_user_main;  /** @var string */  private $wwwDir;  /**   * @param DbTable\Products $products   * @param DbTable\Udaje $udaje   * @param User $user   * @param string $wwwDir */  public function __construct(DbTable\Products $products, DbTable\Udaje $udaje, User $user, string $wwwDir = "") {    $this->products = $products;    $this->products_settings = $udaje->findBy(['id_druh'=>8])->fetchPairs('nazov', 'text');    $this->id_user_main = $user->getId();    $this->wwwDir = $wwwDir;	}    /**   * Formular pre pridanie produktu a editaciu polozky.   * @param int $upload_size   * @param string $products_dir   * @return Form */  public function create(int $upload_size, string $products_dir): Form  {    $this->products_dir = $products_dir;    $form = new Form();		$form->addProtection();    $form->addHidden("id_hlavne_menu");$form->addHidden("id_user_roles");//    $form->addFileUpload("uploader");    $form->addMultiUpload('products', 'Pridaj obrázky produktov')         ->setOption('description', sprintf('Max veľkosť obrázku produktu v bytoch %s kB', $upload_size/1024))         ->setRequired("Obrázky produktov musia byť vybrané!")         ->setHtmlAttribute('accept', 'image/*')         ->addCondition(Form::FILLED)          ->addRule(Form::MAX_FILE_SIZE, 'Max veľkosť obrázku produktu je v bytoch %d B', $upload_size)          ->addRule(Form::IMAGE, 'Musíte vybrať obrázky!');		$form->addSubmit('uloz', 'Ulož')         ->setAttribute('class', 'btn btn-success')         ->onClick[] = [$this, 'productsFormSubmitted'];    $form->addSubmit('cancel', 'Cancel')         ->setAttribute('class', 'btn btn-default')         ->setAttribute('data-dismiss', 'modal')         ->setAttribute('aria-label', 'Close')         ->setValidationScope([]);		return $form;	}    /**    * Spracovanie formulara.   * @param \Nette\Forms\Controls\SubmitButton $button Data formulara    * @throws Database\DriverException   */  public function productsFormSubmitted(\Nette\Forms\Controls\SubmitButton $button) {		$values = $button->getForm()->getValues(); 	//Nacitanie hodnot formulara    try {      if (count($values->products)) {        $this->_multiUpload($values->products, [           'id_hlavne_menu'	 	=> $values->id_hlavne_menu,          'id_user_main'      => $this->id_user_main,          'id_user_roles'     => $values->id_user_roles,        ]);      } 		} catch (Database\DriverException $e) {			$button->addError($e->getMessage());		}  }    /** Ulozenie viacerich produktov   * @param array $products   * @param array $main_data */  private function _multiUpload(array $products, array $main_data) {    foreach ($products as $vp) {      $this->_uploadProduct($vp, $main_data);    }  }    /**   * Upload produktu   * @param \Nette\Http\FileUpload $product   * @param array $main_data   * @return array */  private function _uploadProduct(\Nette\Http\FileUpload $product, array $main_data): array {    $fileName = $product->getSanitizedName();		$pi = pathinfo($fileName);		$file = $pi['filename'];		$ext = $pi['extension'];		$additionalToken = 0;		//Najdi meno suboru		if (file_exists($this->products_dir.$fileName)) {			do { $additionalToken++;			} while (file_exists($this->products_dir.$file.$additionalToken.".".$ext));    }		$finalFileName = ($additionalToken == 0) ? $file : $file.$additionalToken;		//Presun subor na finalne miesto a ak je to obrazok tak vytvor nahlad		$product->move($this->products_dir.$finalFileName.".". $ext);//		if ($product->isImage()) {			$image_name = $this->products_dir.$finalFileName.".". $ext;			$thumb_name = $this->products_dir.'tb_'.$finalFileName.".". $ext;			$image = Image::fromFile($image_name);      $image->resize($this->products_settings['product_main_x'], $this->products_settings['product_main_y'], Image::SHRINK_ONLY);      $image->save($image_name, $this->products_settings['product_main_quality']);			copy($image_name, $thumb_name);			$thumb = Image::fromFile($thumb_name);			$thumb->resize($this->products_settings['product_thumb_x'], $this->products_settings['product_thumb_y'], Image::SHRINK_ONLY); //| Image::EXACT			$thumb->save($thumb_name, $this->products_settings['product_thumb_quality']);//		}        return $this->products->saveProduct(array_merge($main_data,[      'name'      => $finalFileName,      'web_name'	=> Strings::webalize($finalFileName),      'main_file' => $this->products_dir.$finalFileName.".". $ext,      'thumb_file'=> isset($thumb_name) ? $thumb_name : NULL,    ]));  }}